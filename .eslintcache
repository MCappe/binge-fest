[{"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\index.js":"1","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\reportWebVitals.js":"2","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\App.js":"3","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\Header.js":"4","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\Footer.js":"5","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Results.js":"6","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Restaurants.js":"7","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\TvShows.js":"8","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\firebase.js":"9","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Map.js":"10","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\mapStyles.js":"11"},{"size":494,"mtime":1607519596799,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1606166664857,"results":"14","hashOfConfig":"13"},{"size":1655,"mtime":1607652879369,"results":"15","hashOfConfig":"13"},{"size":514,"mtime":1607632388862,"results":"16","hashOfConfig":"13"},{"size":304,"mtime":1607615633422,"results":"17","hashOfConfig":"13"},{"size":3881,"mtime":1607654059063,"results":"18","hashOfConfig":"13"},{"size":4589,"mtime":1607652841975,"results":"19","hashOfConfig":"13"},{"size":7545,"mtime":1607650960498,"results":"20","hashOfConfig":"13"},{"size":511,"mtime":1607381395072,"results":"21","hashOfConfig":"13"},{"size":6355,"mtime":1607654396404,"results":"22","hashOfConfig":"13"},{"size":4852,"mtime":1607390399501,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"dc23gk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\index.js",[],["52","53"],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\reportWebVitals.js",[],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\App.js",[],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\Header.js",["54"],"import { Component } from 'react';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\n\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"wrapper\">\r\n          <h1>BINGE FEST</h1>\r\n          <p>Feeling indecisive? Let us help you find a tv show to binge and a restaurant to order from!</p>\r\n          <Link smooth={true} to=\"tvShows\" className=\"buttons\">Enter</Link>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\Footer.js",[],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Results.js",["55"],"import {Component, Fragment} from \"react\";\r\nimport firebase from '../../firebase.js';\r\n\r\nclass Results extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tvShow: null,\r\n      restaurant: null,\r\n      restaurantList: null,\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    console.log('prev props: ', prevProps);\r\n    console.log('current props: ', this.props);\r\n    if (prevProps !== this.props) {\r\n      if (this.props.restaurantList) {\r\n        this.setState({\r\n          restaurantList: this.props.restaurantList\r\n        })\r\n        this.getRandomRestaurant(this.props.restaurantList);\r\n      } \r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    \r\n    const dbRefTvShows = firebase.database().ref('/tvShows');\r\n    dbRefTvShows.once('value', snapshot => {\r\n      const data = snapshot.val();\r\n      const random = Math.floor(Math.random() * data.list);\r\n      let i = 0;\r\n      for (let key in data) {\r\n        if (i === random) {\r\n          this.setState({\r\n            tvShow: data[key]\r\n          })\r\n        }\r\n        i++;\r\n      }\r\n    })\r\n    if (this.props.restaurantList) {\r\n      this.setState({\r\n        restaurantList: this.props.restaurantList\r\n      })\r\n      this.getRandomRestaurant(this.props.restaurantList);\r\n    }\r\n  }\r\n\r\n  getRandomRestaurant = restaurantList => {\r\n    let localRestaurantList = [];\r\n    if (restaurantList) {\r\n      localRestaurantList = restaurantList;\r\n    } else {\r\n      localRestaurantList = this.state.restaurantList;\r\n    }\r\n    const length = localRestaurantList.length;\r\n    const random = Math.floor(Math.random() * length);\r\n    const stars = [];\r\n    for (let i = 0; i < localRestaurantList[random].rating; i++) {\r\n      stars.push(<img src=\"./star.svg\" alt=\"a star\" className=\"star\" />)\r\n    }\r\n    localRestaurantList[random].rating = stars;\r\n  \r\n    this.setState({\r\n      restaurant: localRestaurantList[random]\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <section id=\"results\" className=\"results\">\r\n        <div className=\"wrapper\">\r\n          <h2>RESULTS</h2>\r\n          <div className=\"allResults\">\r\n            \r\n            <div className=\"showResults\">\r\n              <h2>Your Show</h2>\r\n\r\n              <div className=\"showResultsContainer\">\r\n                {this.state.tvShow && (\r\n                  <div className=\"showDetails\">\r\n                    <div className=\"showImg\">\r\n                      <img src={`https://image.tmdb.org/t/p/original` + this.state.tvShow.poster_path} alt=\"\" />\r\n                    </div>\r\n                    <h3>{this.state.tvShow.name}</h3>\r\n                    <p>{this.state.tvShow.overview}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n              {this.state.restaurant && (\r\n                <div className=\"foodResults\">\r\n                  <h2>Your Food</h2>\r\n                  <h3>{this.state.restaurant.name} {this.state.restaurant.price}</h3>\r\n                  <h4>{this.state.restaurant.rating.map(star => {\r\n                    return star\r\n                  })} Reviews: {this.state.restaurant.review_count}</h4>\r\n                  <h4>{this.state.restaurant.categories && (\r\n                    this.state.restaurant.categories.map(category => {\r\n                      return category.title + ', '\r\n                  }))}</h4>\r\n                  <h4>Phone: {this.state.restaurant.display_phone}</h4>\r\n                  <h4>Distance from user: {Math.round(this.state.restaurant.distance / 100) / 10}</h4>\r\n                </div>\r\n              )}\r\n              {/* <img src={image_url} alt=\"\" className=\"foodImage\" /> */} \r\n          </div>\r\n          <div className=\"chooseAnotherDiv\">\r\n            <button className=\"buttons\" onClick={() => this.getRandomRestaurant()}>Try again?</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Results;","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Restaurants.js",["56","57","58"],"import { Component } from 'react';\r\nimport Map from './Map.js';\r\nimport { Link, animateScroll as scroll } from 'react-scroll';\r\n\r\nclass Restaurants extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      restaurantArr: null,\r\n      showResults: \"false\",\r\n      favouriteRestaurant: null,\r\n      resultPageOpen: false,\r\n    }\r\n  }\r\n\r\n  showRestaurants = restaurantArr => {\r\n    this.setState({\r\n      restaurantArr: restaurantArr,\r\n      showResults: \"true\"\r\n    })\r\n  }\r\n\r\n  removeRestaurantItem = (id) => {\r\n    const newRestaurantArr = this.state.restaurantArr.filter(restaurant => {\r\n      if (restaurant.id !== id) {\r\n        return restaurant;\r\n      }\r\n    })\r\n    this.setState({\r\n      restaurantArr: newRestaurantArr\r\n    })\r\n  }\r\n\r\n// this.props.changeInputScreen\r\n  render() {\r\n    return (\r\n      <div className=\"restaurants\">\r\n        <div className=\"wrapper\">\r\n          <a href=\"\" class=\"changeScreen\" onClick={(e) => {\r\n            e.preventDefault();\r\n            this.props.changeInputScreen();\r\n          }}>\r\n            <img src=\"./left-arrow.png\" alt=\"Go back arrow\" />\r\n          </a>\r\n          <h2>Find restaurants near you</h2>\r\n          <div className=\"restaurantWrapper\">\r\n            <Map addRestaurants={this.props.addRestaurants} showRestaurants={this.showRestaurants} className={`mapComponent ${this.state.showResults}`} showResults={this.state.showResults} />\r\n              {this.state.restaurantArr && (\r\n                <div className=\"restaurantResults\">\r\n                  {this.state.restaurantArr.map(item => {\r\n                    return (\r\n                      <div className=\"restaurant\" key={item.id}>\r\n                        {/* <img src={item.image_url} alt=\"\"/> */}\r\n                        <div\r\n                          className=\"restaurantImage\"\r\n                          style={{ backgroundImage: `url(${item.image_url})` }}\r\n                        ></div>\r\n                        <div className=\"restaurantText\">\r\n                          <div className=\"removeRestaurant\">\r\n                            <i class=\"fas fa-times\" title=\"Remove from list\" onClick={() => this.removeRestaurantItem(item.id)}></i>\r\n                          </div>\r\n                          <h4>{item.name}</h4>\r\n                          <p>{item.categories.map((category, index) => {\r\n                            if (index === 0) {\r\n                              return category.title\r\n                            } else {\r\n                              return \", \" + category.title\r\n                            }\r\n                          })}</p>\r\n                          <div className=\"addRestaurantToFave\" title=\"Add to favourites\">\r\n                          <i className={\r\n                            this.state.favouriteRestaurant === item \r\n                              ? \"fas fa-star favourited\"  \r\n                              : \"fas fa-star\"  \r\n                          }  onClick={() => {\r\n                            if (this.state.favouriteRestaurant === item) {\r\n                              this.setState({\r\n                                favouriteRestaurant: null\r\n                              })\r\n                              if (this.state.resultPageOpen) {\r\n                                this.props.addRestaurants(this.state.restaurantArr);\r\n                              }\r\n                            } else {\r\n                              this.setState({\r\n                                favouriteRestaurant: item\r\n                              })\r\n                              if (this.state.resultPageOpen) {\r\n                                this.props.addRestaurants([item]);\r\n                              }\r\n                            }\r\n                          }} ></i>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )}\r\n          </div>\r\n          <div className=\"showMeResultsDiv\">\r\n            <Link smooth={true} to=\"results\" className=\"buttons goToResults\" onClick={() => { \r\n              this.setState({\r\n                resultPageOpen: true\r\n              })\r\n              if (this.state.favouriteRestaurant) {\r\n                this.props.addRestaurants([this.state.favouriteRestaurant]);\r\n              } else {\r\n                this.props.addRestaurants(this.state.restaurantArr);\r\n              }\r\n            }} >Show me results!</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Restaurants;","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\TvShows.js",["59"],"import { Component } from 'react';\r\nimport firebase from '../../firebase.js';\r\nimport axios from 'axios';\r\n\r\nclass TvShows extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tvGenre: null,\r\n      tvResult: null,\r\n      tvSearch: '',\r\n      isOn: true,  \r\n      onFavourites: [],\r\n      numberOfShows: null,\r\n      showListObject: {}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const numberOfShowsRef = firebase.database().ref('/tvShows/numberOfShows');\r\n    const showListRef = firebase.database().ref('tvShows');\r\n    numberOfShowsRef.once('value', snapshot => {\r\n      const data = snapshot.val();\r\n      // console.log('number of shows: ', data);\r\n      this.setState({\r\n        numberOfShows: data\r\n      })\r\n    }) \r\n    showListRef.once('value', snapshot => {\r\n      const data = snapshot.val();\r\n      // console.log('shows object: ', data);\r\n      const showListObj = {}\r\n      for (let showName in data) {\r\n        showListObj[showName] = showName\r\n      }\r\n      console.log(showListObj);\r\n      this.setState({\r\n        showListObject: showListObj\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const apiKey = \"262b2d458b0315ed4049499ffec1d210\";\r\n    \r\n    // console.log(this.state);\r\n    axios({\r\n      url: 'https://api.themoviedb.org/3/discover/tv',\r\n      method: 'GET',\r\n      responseType: 'json',\r\n      params: {\r\n        api_key: apiKey,\r\n        language: `en-US`,\r\n        with_genres: this.state.tvGenre,\r\n        page: 1\r\n        // sort_by: `popularity.desc`,\r\n        // page: pages\r\n      }\r\n    }).then(res => {\r\n      // console.log(res);\r\n      // const test = 'Supernaturall';\r\n      // console.log('test', this.state.showListObject[`${test}`]);\r\n      const results = res.data.results.map(show => {\r\n        // console.log('show name: ', show.name);\r\n        // console.log('state name: ',this.state.showListObject[`${show.name}`])\r\n        if (show.name === this.state.showListObject[`${show.name}`]) {\r\n          show.isSaved = true;\r\n          console.log('name: ', show.name, 'state name: ', this.state.showListObject[show.name]);\r\n          return show;\r\n        } else {\r\n          show.isSaved = false;\r\n          return show;\r\n        }\r\n      })\r\n      console.log(results);\r\n      this.setState({\r\n        tvResult: results\r\n      })\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n\r\n    this.setState({\r\n      tvGenre: target.value  \r\n    })\r\n  }\r\n\r\n  addToDatabase = (show) => {\r\n    console.log(show);\r\n    let isIn = false;\r\n    const tvShowRef = firebase.database().ref(`/tvShows/${show.name}`);\r\n    const tvShowListRef = firebase.database().ref('/tvShows');\r\n    tvShowRef.once('value', snapshot => {\r\n      // console.log(snapshot.val());\r\n      const dataObj = snapshot.val();\r\n      // for (let tvShowName in dataObj) {\r\n      //   if (tvShowName === show.name) {\r\n      //     isIn = true;\r\n      //   }  \r\n      // }\r\n      if (!dataObj) {\r\n        show.isSaved = true;\r\n        tvShowRef.update({\r\n          [show.name]: show\r\n        });\r\n        tvShowListRef.update({\r\n          numberOfShows: this.state.numberOfShows + 1\r\n        })\r\n        this.setState({\r\n          numberOfShows: this.state.numberOfShows + 1\r\n        })\r\n        console.log('not in');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"tvShows\" className=\"tvShows\">\r\n        <div className=\"wrapper\">\r\n          <h2>Search for a TV Show</h2>\r\n          <div className=\"showContainer\">\r\n            <p>Number of stored tv shows: {this.state.numberOfShows}</p>\r\n            <div className=\"showSearch\">\r\n              <form onSubmit={this.handleSubmit}>\r\n                {/* <label htmlFor=\"tvSearch\">Search for Show:</label>\r\n                <input type=\"text\" id=\"tvSearch\" name=\"tvSearch\" onChange={this.handleChange} /> */}\r\n                {/* <label htmlFor=\"tvGenre\">Search for Genre:</label>\r\n                <input type=\"text\" id=\"tvGenre\" name=\"tvGenre\" onChange={this.handleChange} /> */}\r\n                \r\n                <fieldset>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"animation\">Animation\r\n                    <input \r\n                      type=\"radio\" \r\n                      name=\"categoryMeal\" \r\n                      value=\"16\" \r\n                      id=\"animation\" \r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"scienceFiction\">Sci-Fi and Fantasy\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"10765\" id=\"scienceFiction\" onChange={this.handleChange}/>\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"drama\">Drama\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"18\" id=\"drama\" onChange={this.handleChange} />\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"comedy\">Comedy\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"35\" id=\"comedy\" onChange={this.handleChange} />\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"crime\">Crime\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"80\" id=\"crime\" onChange={this.handleChange} />\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"documentary\">Documentary\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"99\" id=\"documentary\" onChange={this.handleChange} />\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"mystery\">Mystery\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"9648\" id=\"mystery\" onChange={this.handleChange}/>\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"reality\">Reality\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"10764\" id=\"reality\" onChange={this.handleChange}/>\r\n                  </label>\r\n                  <label className=\"genreCategoryOption\" htmlFor=\"soap\">Soap\r\n                    <input type=\"radio\" name=\"categoryMeal\" value=\"10766\" id=\"soap\" onChange={this.handleChange} />\r\n                  </label>\r\n                </fieldset>\r\n                \r\n                <button value=\"getShows\" className=\"buttons dark\">Search</button>\r\n                <button value=\"submit\" className=\"buttons dark\"><i className=\"fas fa-random\" title=\"Click for random option\"></i></button>\r\n                <button className=\"buttons dark\" id=\"dark\" onClick={this.props.changeInputScreen}>choose your Restaurant</button>\r\n              </form>\r\n            </div>\r\n            <div id=\"showResults\" className=\"showSelections\">\r\n              <ul>\r\n                {this.state.tvResult && this.state.tvResult.map(show => {\r\n                  return (\r\n                    <li>\r\n                      <i className={`fas fa-bookmark ${show.isSaved}`} title=\"Add to favourites\" onClick={() => this.addToDatabase(show)}></i>\r\n                      <img src={`https://image.tmdb.org/t/p/original${show.poster_path}`} alt=\"\" className=\"tvImage\" />\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n              {/* <button value=\"showRestaurants\" className=\"goToRestaurants\">Go to restaurants!</button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default TvShows;","C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\firebase.js",[],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\Components\\MainComponents\\Map.js",[],"C:\\Users\\Greg\\Desktop\\Juno\\bootcamp\\projects\\Project 6\\binge-fest\\src\\mapStyles.js",["60"],"export default [\r\n  {\r\n    \"elementType\": \"labels.text\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"landscape.natural\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#f5f5f2\"\r\n      },\r\n      {\r\n        \"visibility\": \"on\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"administrative\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"transit\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.attraction\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"landscape.man_made\",\r\n    \"elementType\": \"geometry.fill\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      },\r\n      {\r\n        \"visibility\": \"on\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.business\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.medical\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.place_of_worship\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.school\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.sports_complex\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      },\r\n      {\r\n        \"visibility\": \"simplified\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"simplified\"\r\n      },\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      },\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.highway\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi\",\r\n    \"elementType\": \"labels.icon\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#71c8d4\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"landscape\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#e5e8e7\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#8ba129\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#ffffff\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.sports_complex\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#c7c7c7\"\r\n      },\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"water\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#a0d3d3\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"stylers\": [\r\n      {\r\n        \"color\": \"#91b65d\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.park\",\r\n    \"stylers\": [\r\n      {\r\n        \"gamma\": 1.51\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"on\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"poi.government\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"landscape\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\",\r\n    \"elementType\": \"labels\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.arterial\",\r\n    \"elementType\": \"geometry\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"simplified\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road.local\",\r\n    \"stylers\": [\r\n      {\r\n        \"visibility\": \"simplified\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"featureType\": \"road\"\r\n  },\r\n  {\r\n    \"featureType\": \"road\"\r\n  },\r\n  {},\r\n  {\r\n    \"featureType\": \"road.highway\"\r\n  }\r\n]",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":33,"nodeType":"67","messageId":"68","endLine":2,"endColumn":39},{"ruleId":"65","severity":1,"message":"69","line":1,"column":20,"nodeType":"67","messageId":"68","endLine":1,"endColumn":28},{"ruleId":"65","severity":1,"message":"66","line":3,"column":33,"nodeType":"67","messageId":"68","endLine":3,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":24,"column":73,"nodeType":"72","messageId":"73","endLine":24,"endColumn":75},{"ruleId":"74","severity":1,"message":"75","line":39,"column":11,"nodeType":"76","endLine":42,"endColumn":14},{"ruleId":"65","severity":1,"message":"77","line":93,"column":9,"nodeType":"67","messageId":"68","endLine":93,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":1,"column":1,"nodeType":"80","endLine":314,"endColumn":2},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'scroll' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isIn' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]